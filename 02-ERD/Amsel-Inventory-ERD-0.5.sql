-- MySQL Script generated by MySQL Workbench
-- Tue Mar 14 14:00:30 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Inventory
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Inventory
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Inventory` DEFAULT CHARACTER SET utf8 ;
USE `Inventory` ;

-- -----------------------------------------------------
-- Table `Inventory`.`Permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Permission` (
  `PermissionID` INT NOT NULL AUTO_INCREMENT,
  `Role` VARCHAR(45) NULL DEFAULT 'GUEST',
  `PermissionLevel` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`PermissionID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Users` (
  `UserID` INT NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NULL,
  `LastName` VARCHAR(45) NULL,
  `NickName` VARCHAR(45) NULL,
  `PermissionID` INT NULL,
  `isDisable` BIT(1) NOT NULL,
  `UserName` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`UserID`),
  INDEX `idPermission_idx` (`PermissionID` ASC),
  CONSTRAINT `idPermission`
    FOREIGN KEY (`PermissionID`)
    REFERENCES `Inventory`.`Permission` (`PermissionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`PCUsers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`PCUsers` (
  `PCUserID` INT NOT NULL COMMENT '	',
  `FirstName` VARCHAR(45) NOT NULL COMMENT '	',
  `LastName` VARCHAR(45) NOT NULL,
  `NickName` VARCHAR(45) NOT NULL COMMENT '		',
  `ProfileImage` BLOB NULL,
  `RegisteredDate` VARCHAR(45) NOT NULL,
  `Updated` VARCHAR(45) NOT NULL,
  `idUser` INT NOT NULL,
  `TransactionDate` DATETIME NULL,
  PRIMARY KEY (`PCUserID`),
  INDEX `idUser_idx` (`idUser` ASC),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Inventory`.`Users` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`ProductUnit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`ProductUnit` (
  `ProductUnitID` INT NOT NULL AUTO_INCREMENT COMMENT '- Bottle\n- Box\n- Pack\n\nขวด\nกล่อง\nแพค',
  `ProductUnit` VARCHAR(45) NULL,
  PRIMARY KEY (`ProductUnitID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Products` (
  `ProductID` INT NOT NULL AUTO_INCREMENT,
  `ProductName` VARCHAR(45) NOT NULL COMMENT '	',
  `ProductImage` BLOB NULL,
  `Price` DOUBLE NOT NULL DEFAULT 0,
  `Commission` DOUBLE NOT NULL DEFAULT 0,
  `Updated` DATETIME NULL,
  `ProductUnit` INT NULL,
  `canRedeem` BIT(1) NULL COMMENT 'Redeemable = 1\nNo Redeem = 0\n',
  PRIMARY KEY (`ProductID`),
  INDEX `ProductUnit_idx` (`ProductUnit` ASC),
  CONSTRAINT `ProductUnit`
    FOREIGN KEY (`ProductUnit`)
    REFERENCES `Inventory`.`ProductUnit` (`ProductUnitID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Stores` (
  `StoreID` INT NOT NULL COMMENT '			',
  `StoreName` VARCHAR(45) NOT NULL,
  `Address` VARCHAR(45) NOT NULL,
  `Province` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`StoreID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`PCUserInStore`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`PCUserInStore` (
  `PCUserID` INT NULL,
  `StoreID` INT NULL,
  INDEX `idPCUser_idx` (`PCUserID` ASC),
  INDEX `idStore_idx` (`StoreID` ASC),
  CONSTRAINT `idPCUser`
    FOREIGN KEY (`PCUserID`)
    REFERENCES `Inventory`.`PCUsers` (`PCUserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idStore`
    FOREIGN KEY (`StoreID`)
    REFERENCES `Inventory`.`Stores` (`StoreID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Sold`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Sold` (
  `idSold` INT NOT NULL,
  `idProduct` INT NULL,
  `Amount` VARCHAR(45) NULL,
  PRIMARY KEY (`idSold`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`TransactionType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`TransactionType` (
  `TransactionTypeID` INT NOT NULL AUTO_INCREMENT COMMENT '- Purchase\n- Sold\n- Withdraw',
  `TransactionType` VARCHAR(45) NULL,
  PRIMARY KEY (`TransactionTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Transactions` (
  `TransactionID` INT NOT NULL,
  `TransactionType` INT NOT NULL,
  `ProductID` INT NOT NULL,
  `PCUserID` INT NOT NULL,
  `Amount` INT NOT NULL DEFAULT 0,
  `Date` DATETIME NOT NULL,
  PRIMARY KEY (`TransactionID`),
  INDEX `Product_idx` (`ProductID` ASC),
  INDEX `TransactionType_idx` (`TransactionType` ASC),
  INDEX `PCUser_idx` (`PCUserID` ASC),
  CONSTRAINT `Product`
    FOREIGN KEY (`ProductID`)
    REFERENCES `Inventory`.`Products` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `TransactionType`
    FOREIGN KEY (`TransactionType`)
    REFERENCES `Inventory`.`TransactionType` (`TransactionTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PCUser`
    FOREIGN KEY (`PCUserID`)
    REFERENCES `Inventory`.`PCUsers` (`PCUserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`IssueType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`IssueType` (
  `IssueTypeID` INT NOT NULL AUTO_INCREMENT,
  `Issue` VARCHAR(45) NULL COMMENT '- Purchase\n- Inventory\n- Sell\n- Technical\n- Others',
  PRIMARY KEY (`IssueTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`IssueStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`IssueStatus` (
  `IssueStatusID` INT NOT NULL AUTO_INCREMENT,
  `IssueType` VARCHAR(45) NULL COMMENT '- Open\n- Pending\n\n- Close with Fixed\n- Close ignore\n',
  PRIMARY KEY (`IssueStatusID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Issue`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Issue` (
  `IssueID` INT NOT NULL,
  `IssueType` INT NULL,
  `Description` TEXT(1000) NULL,
  `IssueStatusID` INT NULL,
  PRIMARY KEY (`IssueID`),
  INDEX `IssueType_idx` (`IssueType` ASC),
  INDEX `IssueStatus_idx` (`IssueStatusID` ASC),
  CONSTRAINT `IssueType`
    FOREIGN KEY (`IssueType`)
    REFERENCES `Inventory`.`IssueType` (`IssueTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `IssueStatus`
    FOREIGN KEY (`IssueStatusID`)
    REFERENCES `Inventory`.`IssueStatus` (`IssueStatusID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`StoreIssues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`StoreIssues` (
  `StoreID` INT NULL,
  `IssueID` INT NULL,
  INDEX `Issue_idx` (`IssueID` ASC),
  CONSTRAINT `Store`
    FOREIGN KEY (`StoreID`)
    REFERENCES `Inventory`.`Stores` (`StoreID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Issue`
    FOREIGN KEY (`IssueID`)
    REFERENCES `Inventory`.`Issue` (`IssueID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`LeaveType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`LeaveType` (
  `LeaveTypeID` INT NOT NULL COMMENT '- Sick Leave\n- Business Leave\n- Other Leave',
  `LeaveType` VARCHAR(45) NULL,
  PRIMARY KEY (`LeaveTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`Leave`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`Leave` (
  `LeaveID` INT NOT NULL,
  `LeaveTypeID` INT NOT NULL,
  `FromDate` DATETIME NULL,
  `ToDate` DATETIME NULL,
  `LeaveAmount` DOUBLE NOT NULL DEFAULT 0,
  `PCUserID` INT NOT NULL,
  `Reason` TEXT(1000) NOT NULL,
  PRIMARY KEY (`LeaveID`),
  INDEX `LeaveType_idx` (`LeaveTypeID` ASC),
  INDEX `PCUser_idx` (`PCUserID` ASC),
  CONSTRAINT `LeaveType`
    FOREIGN KEY (`LeaveTypeID`)
    REFERENCES `Inventory`.`LeaveType` (`LeaveTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PCUser`
    FOREIGN KEY (`PCUserID`)
    REFERENCES `Inventory`.`PCUsers` (`PCUserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Inventory`.`ci_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Inventory`.`ci_sessions` (
  `id` VARCHAR(128) NOT NULL,
  `ip_address` VARCHAR(45) NOT NULL,
  `timestamp` BIGINT(45) NOT NULL,
  `data` TEXT(1000) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
